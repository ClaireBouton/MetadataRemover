language: android

#sudo: false # Use container based build mechanism

env:
  global:
    - BUILD_TOOLS=26.0.2
    - ANDROID_SDK=27
    - GOOGLE_APIS=24
    - ADB_INSTALL_TIMEOUT=5 # Emulator install timeout in minutes
  matrix:
    # Emulator configurations (ensure that the configuration is available using "android list sdk --no-ui --all --extended" and "android list targets")
    - EMULATOR_ANDROID_SDK=21 EMULATOR_ABI=armeabi-v7a
    # - EMULATOR_ANDROID_SDK=19 EMULATOR_ABI=armeabi-v7a

# Android build system
android:
  # SDK components to load before test
  components:
    # Platform tools
    - tools
    - platform-tools
    # Required to get the newest Android SDK tools (see https://docs.travis-ci.com/user/languages/android/#Installing-a-newer-SDK-Platform-Tools-revision)
    - tools
    # Gradle build tools version
    - build-tools-$BUILD_TOOLS
    # Target SDK version
    - android-$ANDROID_SDK
    # Support libraries
    - extra-google-m2repository
    - extra-android-m2repository
    # Emulators to run during tests
    - sys-img-${ANDROID_EMULATOR_ABI}-android-$EMULATOR_ANDROID_SDK
    - sys-img-${ANDROID_EMULATOR_ABI}-google_apis-$EMULATOR_ANDROID_SDK

# Installation routine
# Scripts to run before installation
before_install:
  #- android list sdk --no-ui --all --extended
  - mkdir "${ANDROID_HOME}/licenses" || true
  - echo -e "\n601085b94cd77f0b54ff86406957099ebe79c4d6" > "${ANDROID_HOME}/licenses/android-googletv-license"
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "${ANDROID_HOME}/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "${ANDROID_HOME}/licenses/android-sdk-preview-license"
  - echo -e "\n33b6a2b64607f11b759f320ef9dff4ae5c47d97a" > "${ANDROID_HOME}/licenses/google-gdk-license"
  - echo -e "\nd975f751698a77b662f1254ddbeed3901e976f5a" > "${ANDROID_HOME}/licenses/intel-android-extra-license"
  - echo -e "\ne9acab5b5fbb560a72cfaecce8946896ff6aab9d" > "${ANDROID_HOME}/licenses/mips-android-sysimage-license"
  - sleep 10
  - chmod +x gradlew
# Scripts to run before test
before_script:
  # Set up code coverage report
  - ./gradlew build jacocoTestReport assembleAndroidTest --stacktrace
  # Emulator management: create, start and wait
  #- android list targets
  - echo no | android create avd --force -n test -t android-$EMULATOR_ANDROID_SDK --abi $EMULATOR_ABI
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
# Scripts to run for test
script:
  # Generate code coverage tests ("travis_wait 20 <command>" is needed because Travis kills the build
  # after 10mins without log output. More info:
  # https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received )
  - adb shell setprop dalvik.vm.dexopt-flags v=n,o=v
  - travis_wait 20 ./gradlew connectedCheck --stacktrace
  # Run android tests
  - travis_wait 20 ./gradlew connectedAndroidTest --stacktrace
after_success:
  # Upload code coverage report
  - bash <(curl -s https://codecov.io/bash)
  
# Use Tracis CI's cache management
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache
