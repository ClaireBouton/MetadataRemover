/*
 * MIT License
 *
 * Copyright (c) 2018 Jan Heinrich Reimer
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// Android app plugin
apply plugin: "com.android.application"
// Kotlin plugin
apply plugin: "kotlin-android"
// Kotlin convenience extensions for Android plugin
apply plugin: "kotlin-android-extensions"
// Kotlin annotation processor plugin
apply plugin: "kotlin-kapt"

android {
    buildToolsVersion project.buildToolsVersion

    compileSdkVersion project.compileSdkVersion

    defaultConfig {
        applicationId "rocks.poopjournal.metadataremover"

        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion

        versionCode project.appVersionMajor * 100000 +
                project.appVersionMinor * 10000 +
                project.appVersionPatch * 1000 +
                project.appVersionBuild
        versionName "${project.appVersionMajor}.${project.appVersionMinor}" + (project.appVersionPatch !=
                0 ? ".${project.appVersionPatch}" : "")

        // The default test runner for Android instrumentation tests.
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        // Debug builds
        debug {
            // Append "DEBUG" to all debug build versions
            versionNameSuffix ' DEBUG'
        }

        // Production builds
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }

    // Also include `src/main/kotlin` as JVM source directory.
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
    }

    // Enable Android data binding.
    dataBinding {
        enabled = true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }

    packagingOptions {
        exclude '/META-INF/INDEX.LIST'
        exclude '/INDEX.LIST'
        exclude '/META-INF/DEPENDENCIES'
        exclude '/META-INF/DEPENDENCIES.txt'
        exclude '/DEPENDENCIES'
        exclude '/DEPENDENCIES.txt'
        exclude '/META-INF/ASL2.0'
        exclude '/META-INF/*.handlers'
        exclude '/META-INF/*.schemas'
        exclude '/META-INF/**.*'
        exclude '/mozilla/*.*'
    }
}

// Kotlin language configuration
kotlin {
    experimental {
        // Enable experimental coroutines feature
        coroutines 'enable'
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$project.kotlinPluginVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$project.kotlinPluginVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.20"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.20"

    // Material Design
    implementation "com.google.android.material:material:1.0.0-rc01"

    // AppCompat support
    implementation "androidx.appcompat:appcompat:1.0.0-rc01"
    implementation "androidx.core:core-ktx:1.0.0-rc01"
    implementation "androidx.constraintlayout:constraintlayout:1.1.2"
    implementation "androidx.recyclerview:recyclerview:1.0.0-rc01"
    implementation "androidx.cardview:cardview:1.0.0-rc01"
    implementation "androidx.exifinterface:exifinterface:1.0.0-rc01"
    // Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0-rc01"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0-rc01"

    // Timber logging util
    implementation "com.jakewharton.timber:timber:4.5.1"

    // Local unit test libraries
    testImplementation "junit:junit:4.12"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$project.kotlinPluginVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$project.kotlinPluginVersion"
    androidTestImplementation "androidx.test:runner:1.1.0-alpha4"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0-alpha4"

    // Okio I/O
    implementation "com.squareup.okio:okio:1.14.0"
    implementation "com.github.bumptech.glide:glide:4.7.1"
    //implementation "org.apache.commons:commons-imaging:1.0-R1401825"
    //implementation "org.apache.tika:tika-core:1.17"
    //implementation "org.apache.tika:tika-parsers:1.17"
    //implementation "com.drewnoakes:metadata-extractor:2.11.0"

    //implementation "com.getkeepsafe.taptargetview:taptargetview:1.9.1"
    implementation "com.sothree.slidinguppanel:library:3.4.0"
    implementation "com.github.zagum:Android-ExpandIcon:1.2.1"
    implementation "com.mikepenz:aboutlibraries:6.2.0-rc01"
}
